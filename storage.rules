rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check image content type
    function isImageType(contentType) {
      return contentType.matches('image/.*');
    }

    // Allow image uploads by authenticated users
    match /snipes/{userId}/{imageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024 // 5MB max
        && isImageType(request.resource.contentType);
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // Allow profile images
    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
        && request.auth.uid == userId
        && request.resource.size < 2 * 1024 * 1024 // 2MB max
        && isImageType(request.resource.contentType);
    }
  }
}
